#include  <iostream>		//для использования потоков ввода/вывода

int nTwin = 1;			//глобальная переменная
namespace TwinSpace { int nTwin = 2; }	//переменная объявлена в
//пространстве имен - TwinSpace

#define stop do{ } while(0)	

int main()
{
	//Задание 9. Циклы.

		//Задание 9.1 Напишите фрагмент кода, который реализует с помощью for
		//следующую логику: найти сумму заданного диапазона целых чисел.
		//Введите границы с помощью потока ввода или с помощью средств отладки.
		//Предусмотрите защиту от ввода нижней границы больше, чем верхней.
	{
		int low, high, sum;
		std::cout << "Enter low and high bound" << std::endl;
		std::cin >> low >> high;
		//сформироыать границы диапазона

		//проверить корректность значений
		if (low <= high)
		{
			// вычислить сумму
			sum = 0;
			for (int i = low; i <= high; i++) {
				sum += i;
			}
			std::cout << "sum = " << sum << std::endl;
			stop;
		}

		// проверить в отладчике значение
		stop;
	}


	//Задание 9.2 Напишите фрагмент кода, который реализует с помощью do-while
	//следующую логику: на каждой итерации цикла ввести с консоли целое значение
	// и покинуть цикл, если значение удовлетворяет условию: 
	// значение больше или равно 10 и четное.
	//Замечание: проверка на четность с использованием операции остатка от деления
	//нацело генерирует очень неэффективный код. Попробуйте реализовать альтернативный
	//вариант.	
	{
		int x;
		float x1;
		do
		{
			std::cout << "Enter digit >= 10 && even for exit " << std::endl;
			std::cin >> x;
			x1 = (float)x;
		} while (x < 10 || x / 2 != x1 / 2);

		std::cout << "x = " << x << std::endl;
	}

	//Задание 9.3 Напишите фрагмент кода, который реализует с помощью while
	//следующую логику: исходно int x = 0; 
	//на каждой итерации x=x+1, sum=sum+1/x
	//найти значение x, при котором sum>1.7
	{
		int x = 0;
		double sum = 0;

		while (sum <= 1.7)
		{
			std::cout << " + ";
			x++;
			sum += 1. / x;
			std::cout << x << "  ";
		}
		std::cout << "\nsum = " << sum << "\nx = " << x << std::endl;

	}

	return 0; //код завершения приложения
}	// Конец функции main()
